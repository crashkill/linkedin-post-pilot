// Script para automaticamente publicar o post sobre desenvolvimento web
// Este script simula a a√ß√£o de clicar no bot√£o "Publicar Agora" na aplica√ß√£o

import puppeteer from 'puppeteer';

async function autoPublishPost() {
  let browser;
  
  try {
    console.log('üöÄ Iniciando automa√ß√£o para publicar post...');
    
    // Iniciar o navegador
    browser = await puppeteer.launch({
      headless: false, // Mostrar o navegador para debug
      defaultViewport: null,
      args: ['--start-maximized']
    });
    
    const page = await browser.newPage();
    
    // Navegar para a aplica√ß√£o
    console.log('üåê Navegando para a aplica√ß√£o...');
    await page.goto('http://localhost:8080', { waitUntil: 'networkidle2' });
    
    // Aguardar a p√°gina carregar completamente
    await new Promise(resolve => setTimeout(resolve, 3000));
    
    // Verificar se o di√°logo de cria√ß√£o de post est√° aberto
    console.log('üîç Verificando se o di√°logo est√° aberto...');
    
    // Aguardar o bot√£o "Publicar Agora" aparecer
    try {
      await page.waitForSelector('button:has-text("Publicar Agora")', { timeout: 10000 });
      console.log('‚úÖ Bot√£o "Publicar Agora" encontrado!');
      
      // Clicar no bot√£o
      await page.click('button:has-text("Publicar Agora")');
      console.log('üéØ Clicou no bot√£o "Publicar Agora"!');
      
      // Aguardar a confirma√ß√£o
      await new Promise(resolve => setTimeout(resolve, 3000));
      
      console.log('‚úÖ Post publicado com sucesso!');
      
    } catch (error) {
      console.log('‚ö†Ô∏è Bot√£o n√£o encontrado, tentando alternativa...');
      
      // Tentar encontrar o bot√£o por classe CSS
      const publishButton = await page.$('button.bg-blue-600');
      if (publishButton) {
        await publishButton.click();
        console.log('üéØ Clicou no bot√£o de publicar (alternativa)!');
        await new Promise(resolve => setTimeout(resolve, 3000));
        console.log('‚úÖ Post publicado com sucesso!');
      } else {
        console.log('‚ùå N√£o foi poss√≠vel encontrar o bot√£o de publicar');
      }
    }
    
    // Aguardar um pouco para ver o resultado
    await new Promise(resolve => setTimeout(resolve, 5000));
    
  } catch (error) {
    console.error('‚ùå Erro durante a automa√ß√£o:', error);
  } finally {
    if (browser) {
      await browser.close();
    }
  }
}

// Executar a automa√ß√£o
autoPublishPost()
  .then(() => {
    console.log('üéâ Automa√ß√£o conclu√≠da!');
    process.exit(0);
  })
  .catch((error) => {
    console.error('‚ùå Erro fatal:', error);
    process.exit(1);
  });

export { autoPublishPost };