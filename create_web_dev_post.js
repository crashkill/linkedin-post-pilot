import { createClient } from '@supabase/supabase-js';

// Configura√ß√£o do Supabase
const supabaseUrl = process.env.VITE_SUPABASE_URL;
const supabaseKey = process.env.VITE_SUPABASE_ANON_KEY;
const supabase = createClient(supabaseUrl, supabaseKey);

// Fun√ß√£o para gerar imagem ultrarealista
async function generateImage(prompt) {
  try {
    const imageUrl = `https://trae-api-us.mchost.guru/api/ide/v1/text_to_image?prompt=${encodeURIComponent(prompt)}&image_size=landscape_16_9`;
    console.log('üé® Gerando imagem ultrarealista...');
    return imageUrl;
  } catch (error) {
    console.error('Erro ao gerar imagem:', error);
    return null;
  }
}

// Fun√ß√£o para criar post sobre desenvolvimento web moderno
async function createWebDevPost() {
  try {
    console.log('üöÄ Criando post sobre desenvolvimento web moderno...');
    
    // Conte√∫do do post
    const title = 'üöÄ O Futuro do Desenvolvimento Web: React 19 e Next.js 15';
    const content = `O desenvolvimento web est√° evoluindo em uma velocidade impressionante! üåü

Com o lan√ßamento do React 19 e Next.js 15, estamos vendo inova√ß√µes que transformam completamente a experi√™ncia de desenvolvimento:

üî• **React 19 - Novidades que Revolucionam:**
‚Ä¢ React Compiler: Otimiza√ß√£o autom√°tica sem memo()
‚Ä¢ Server Components nativos
‚Ä¢ Actions para formul√°rios mais simples
‚Ä¢ use() hook para promises e context
‚Ä¢ Concurrent Features est√°veis

‚ö° **Next.js 15 - Performance Extrema:**
‚Ä¢ Turbopack como bundler padr√£o
‚Ä¢ Partial Prerendering (PPR)
‚Ä¢ Server Actions aprimoradas
‚Ä¢ Melhor suporte a TypeScript
‚Ä¢ Edge Runtime otimizado

üí° **Por que isso importa?**
‚úÖ Desenvolvimento mais r√°pido e intuitivo
‚úÖ Performance superior para usu√°rios finais
‚úÖ Menos c√≥digo boilerplate
‚úÖ Melhor experi√™ncia de debugging
‚úÖ Escalabilidade empresarial

Estamos vivendo uma nova era do desenvolvimento web, onde a produtividade e performance andam juntas. O futuro √© agora! üéØ

#React #NextJS #WebDevelopment #JavaScript #Frontend #TechInnovation #Programming #WebDev #ReactJS #FullStack`;
    
    // Gerar imagem ultrarealista
    const imagePrompt = 'Ultra-realistic modern web development workspace with multiple monitors showing React and Next.js code, futuristic programming environment, clean desk setup, ambient lighting, high-tech atmosphere, professional developer workspace, 4K quality, photorealistic';
    const imageUrl = await generateImage(imagePrompt);
    
    // Dados do post
    const postData = {
      title: title,
      content: content,
      category: 'Tecnologia',
      status: 'published',
      user_id: '123e4567-e89b-12d3-a456-426614174000', // ID do usu√°rio padr√£o
      ai_generated: true,
      ai_topic: 'Desenvolvimento Web Moderno - React 19 e Next.js 15',
      published_to_linkedin: false
    };
    
    // Salvar o post no banco de dados
    const { data: postResult, error: postError } = await supabase
      .from('posts')
      .insert([postData])
      .select();
    
    if (postError) {
      console.error('‚ùå Erro ao salvar post:', postError);
      return null;
    }
    
    const createdPost = postResult[0];
    console.log('‚úÖ Post criado com sucesso!');
    console.log('üìù T√≠tulo:', title);
    
    // Salvar a imagem associada ao post
    if (imageUrl && createdPost.id) {
      const imageData = {
        post_id: createdPost.id,
        url: imageUrl,
        prompt_used: imagePrompt,
        ai_model: 'Trae AI SDXL',
        bucket_id: 'images'
      };
      
      const { data: imageResult, error: imageError } = await supabase
        .from('images')
        .insert([imageData])
        .select();
      
      if (imageError) {
        console.error('‚ö†Ô∏è Aviso: Erro ao salvar imagem:', imageError);
      } else {
        console.log('üñºÔ∏è Imagem salva com sucesso!');
      }
    }
    
    console.log('üñºÔ∏è Imagem gerada:', imageUrl);
    console.log('üíæ Post salvo no banco de dados');
    
    return createdPost;
    
  } catch (error) {
    console.error('‚ùå Erro ao criar post:', error);
    return null;
  }
}

// Executar a cria√ß√£o do post
createWebDevPost()
  .then((post) => {
    if (post) {
      console.log('üéâ Post sobre desenvolvimento web criado com sucesso!');
      console.log('üîó Acesse a aplica√ß√£o em http://localhost:8080 para visualizar');
    } else {
      console.log('‚ùå Falha ao criar o post');
    }
    process.exit(0);
  })
  .catch((error) => {
    console.error('‚ùå Erro fatal:', error);
    process.exit(1);
  });

export { createWebDevPost };